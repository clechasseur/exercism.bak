## Registers

# | Register | Usage     | Type    | Description                                      |
# | -------- | --------- | ------- | ------------------------------------------------ |
# | `$a0`    | input     | integer | year to check                                    |
# | `$v0`    | output    | boolean | input is leap year (`0` = `false`, `1` = `true`) |
# | `$t0-9`  | temporary | any     | used for temporary storage                       |

.globl is_leap_year

# Alternate approach that uses a macro to avoid repeating code.
#
# Inspired by the following solution:
# https://exercism.org/tracks/mips/exercises/leap/solutions/hyphenrf

.macro if_divisible_by($divisor, $then_jump)
        li      $t0, $divisor
        div     $a0, $t0
        mfhi    $t0
        beqz    $t0, $then_jump
.end_macro

is_leap_year:
        if_divisible_by(400, set_leap)
        if_divisible_by(100, not_leap)
        if_divisible_by(4, set_leap)

not_leap:
        li      $v0, 0
        jr      $ra

set_leap:
        li      $v0, 1
        jr      $ra
